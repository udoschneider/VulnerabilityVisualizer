Class {
	#name : #SyftObject,
	#superclass : #Object,
	#category : #'Syft-Core'
}

{ #category : #accessing }
SyftObject class >> neoJsonMapping: mapper [

	
]

{ #category : #'as yet unclassified' }
SyftObject class >> roassal [

	<script>
	| syft artifacts relationships modelElements relation elements c eb |
	syft := SyftModel demo.
	artifacts := syft artifacts.
	relationships := syft artifactRelationships.

	modelElements := artifacts.
	relation := [ :pa | 
	            | rels as |
	            rels := relationships select: [ :rel | 
		                    rel parent = pa id ].

	            as := rels collect: [ :rel | 
		                  artifacts detect: [ :ca | rel child = ca id ] ] ].

	"artifacts collect: [ :each | each -> (relation value: each) ]."

	"relation := [ :cls | cls dependentClasses ].
"
	elements := modelElements
		            collect: [ :m | 
			            RSEllipse new
				            size: 10;
				            model: m ]
		            as: RSGroup.
	elements @ RSPopup @ RSDraggable.

	c := RSCanvas new.
	c addAll: elements.

	eb := RSEdgeBuilder line.
	eb moveBehind.
	eb shape color: Color gray.
	eb withBorderAttachPoint.
	eb canvas: c.
	eb connectToAll: relation.

	"RSGridLayout on: elements."

	c edges do: #withBorder.
	"c edges @ RSHighlightable defaultRed."
	"c nodes @ RSHighlightable defaultRed withOutgoingEdges."

	RSForceBasedLayout new
		charge: -200;
		on: elements.

	c @ RSCanvasController.
	c inspect
]
