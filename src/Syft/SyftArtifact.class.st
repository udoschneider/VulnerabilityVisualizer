Class {
	#name : #SyftArtifact,
	#superclass : #SyftObject,
	#instVars : [
		'foundBy',
		'id',
		'metadataType',
		'metadata',
		'version',
		'licenses',
		'language',
		'cpes',
		'locations',
		'name',
		'type',
		'purl'
	],
	#category : #'Syft-Core'
}

{ #category : #accessing }
SyftArtifact class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars:
			#( foundBy id metadata metadataType version licenses language
			   cpes locations name type purl ).
		(mapping mapInstVar: #id) valueSchema: UUID.
		(mapping mapInstVar: #locations) valueSchema: #ArrayOfLocation.
		(mapping mapInstVar: #cpes) valueSchema: #ArrayOfCPE.
		(mapping mapInstVar: #purl) valueSchema: PackageUrl ].

	mapper
		for: #ArrayOfLocation
		customDo: [ :mapping | mapping listOfElementSchema: SyftLocation ]
]

{ #category : #accessing }
SyftArtifact >> cpes [

	^ cpes
]

{ #category : #accessing }
SyftArtifact >> cpes: anObject [

	cpes := anObject
]

{ #category : #accessing }
SyftArtifact >> foundBy [

	^ foundBy
]

{ #category : #accessing }
SyftArtifact >> foundBy: anObject [

	foundBy := anObject
]

{ #category : #accessing }
SyftArtifact >> id [
	^ id
]

{ #category : #accessing }
SyftArtifact >> id: anObject [

	id := anObject
]

{ #category : #accessing }
SyftArtifact >> language [

	^ language
]

{ #category : #accessing }
SyftArtifact >> language: anObject [

	language := anObject
]

{ #category : #accessing }
SyftArtifact >> licenses [

	^ licenses
]

{ #category : #accessing }
SyftArtifact >> licenses: anObject [

	licenses := anObject
]

{ #category : #accessing }
SyftArtifact >> locations [

	^ locations
]

{ #category : #accessing }
SyftArtifact >> locations: anObject [

	locations := anObject
]

{ #category : #accessing }
SyftArtifact >> metadata [

	^ metadata
]

{ #category : #accessing }
SyftArtifact >> metadata: anObject [

	metadata := anObject
]

{ #category : #accessing }
SyftArtifact >> metadataType [

	^ metadataType
]

{ #category : #accessing }
SyftArtifact >> metadataType: anObject [

	metadataType := anObject
]

{ #category : #accessing }
SyftArtifact >> name [

	^ name
]

{ #category : #accessing }
SyftArtifact >> name: anObject [

	name := anObject
]

{ #category : #accessing }
SyftArtifact >> packageUrl: anObject [

	purl := anObject
]

{ #category : #printing }
SyftArtifact >> printOn: aStream [

	super printOn: aStream.
	aStream
		space;
		nextPut: $(;
		print: purl;
		nextPut: $)
]

{ #category : #accessing }
SyftArtifact >> purl [
	^ purl
]

{ #category : #accessing }
SyftArtifact >> type [

	^ type
]

{ #category : #accessing }
SyftArtifact >> type: anObject [

	type := anObject
]

{ #category : #accessing }
SyftArtifact >> version [

	^ version
]

{ #category : #accessing }
SyftArtifact >> version: anObject [

	version := anObject
]
