Class {
	#name : #SyftLayer,
	#superclass : #SyftObject,
	#instVars : [
		'mediaType',
		'digest',
		'size'
	],
	#category : #'Syft-Core'
}

{ #category : #accessing }
SyftLayer class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars: #( mediaType digest size ).
		(mapping mapInstVar: #mediaType) valueSchema: ZnMimeType.
		(mapping mapInstVar: #digest) valueSchema: GrypeChecksum ]
]

{ #category : #accessing }
SyftLayer >> digest [

	^ digest
]

{ #category : #accessing }
SyftLayer >> digest: anObject [

	digest := anObject
]

{ #category : #accessing }
SyftLayer >> mediaType [

	^ mediaType
]

{ #category : #accessing }
SyftLayer >> mediaType: anObject [

	mediaType := anObject
]

{ #category : #printing }
SyftLayer >> printOn: aStream [

	super printOn: aStream.
	aStream
		space;
		nextPut: $(;
		print: digest;
		nextPut: $)
]

{ #category : #accessing }
SyftLayer >> size [

	^ size
]

{ #category : #accessing }
SyftLayer >> size: anObject [

	size := anObject
]
