Class {
	#name : #SyftDescriptor,
	#superclass : #SyftObject,
	#instVars : [
		'version',
		'name'
	],
	#category : #'Syft-Core'
}

{ #category : #accessing }
SyftDescriptor class >> neoJsonMapping: mapper [

	mapper
		for: self
		do: [ :mapping | mapping mapInstVars: #( version name ) ]
]

{ #category : #accessing }
SyftDescriptor >> name [

	^ name
]

{ #category : #accessing }
SyftDescriptor >> name: anObject [

	name := anObject
]

{ #category : #printing }
SyftDescriptor >> printOn: stream [

	super printOn: stream.
	stream
		space;
		nextPut: $(;
		nextPutAll: name;
		space;
		nextPutAll: version;
		nextPut: $)
]

{ #category : #accessing }
SyftDescriptor >> version [

	^ version
]

{ #category : #accessing }
SyftDescriptor >> version: anObject [

	version := anObject
]
