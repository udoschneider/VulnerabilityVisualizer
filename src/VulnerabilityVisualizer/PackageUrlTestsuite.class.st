Class {
	#name : #PackageUrlTestsuite,
	#superclass : #Object,
	#instVars : [
		'tests',
		'archive',
		'files',
		'testSuiteFile'
	],
	#category : #'VulnerabilityVisualizer-PURL'
}

{ #category : #actions }
PackageUrlTestsuite class >> generateTestCases [

	^ self new
		  generateTestCases;
		  validateGeneratedTestCases
]

{ #category : #actions }
PackageUrlTestsuite class >> removeTestCases [

	PackageUrlTestsuiteTests removeFromSystem
]

{ #category : #constants }
PackageUrlTestsuite class >> url [

	^ 'https://raw.githubusercontent.com/package-url/purl-spec/master/test-suite-data.json'
]

{ #category : #private }
PackageUrlTestsuite >> createClass: packageName [

	^ TestCase
		  subclass: #PackageUrlTestsuiteTests
		  instanceVariableNames: ''
		  classVariableNames: ''
		  package: self packageName
]

{ #category : #private }
PackageUrlTestsuite >> download [

	^ [ 
	  | json |
	  json := (ZnEasy get: self class url) contents.
	  tests := (NeoJSONReader on: json readStream)
		           for: #ArrayOfTests
		           customDo: [ :mapping | 
			           mapping listOfElementSchema: PackageUrlTestsuiteTest ];
		           nextAs: #ArrayOfTests ] asJob
		  title: 'Package URL Test Suite ...';
		  run
]

{ #category : #actions }
PackageUrlTestsuite >> generateTestCases [

	| class |
	[ :job | 
	job max: self tests size.
	class := self createClass: self packageName.
	self tests do: [ :test | 
		job
			increment;
			title: 'Generating #' , test testMethodName.
		test generateCode: class ] ] asJob run
]

{ #category : #accessing }
PackageUrlTestsuite >> packageName [

	^ 'DepVulnViz-PURL'
]

{ #category : #accessing }
PackageUrlTestsuite >> tests [

	^ tests ifNil: [ self download ]
]

{ #category : #actions }
PackageUrlTestsuite >> validateGeneratedTestCases [

	self assert: [ 
		tests size = PackageUrlTestsuiteTests testSelectors size ]
]
