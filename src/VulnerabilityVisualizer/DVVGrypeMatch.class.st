Class {
	#name : #DVVGrypeMatch,
	#superclass : #DVVModel,
	#instVars : [
		'artifact',
		'relatedVulnerabilities',
		'matchDetails',
		'vulnerability'
	],
	#category : #VulnerabilityVisualizer
}

{ #category : #accessing }
DVVGrypeMatch class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars:
			#( artifact relatedVulnerabilities matchDetails vulnerability ).

		(mapping mapInstVar: #artifact) valueSchema: DVVGrypeArtifact.
		(mapping mapInstVar: #matchDetails) valueSchema: #ArrayOfMatchDetail.
		(mapping mapInstVar: #relatedVulnerabilities) valueSchema:
			#ArrayOfVulnerability.
		(mapping mapInstVar: #vulnerability) valueSchema:
			DVVGrypeVulnerability ].

	mapper
		for: #ArrayOfMatchDetail
		customDo: [ :mapping | 
		mapping listOfElementSchema: DVVGrypeMatchDetails ].
	mapper
		for: #ArrayOfVulnerability
		customDo: [ :mapping | 
		mapping listOfElementSchema: DVVGrypeVulnerability ]
]

{ #category : #accessing }
DVVGrypeMatch >> artifact [
	^ artifact
]
