Class {
	#name : #DVVGrypeChecksum,
	#superclass : #DVVModel,
	#instVars : [
		'algorithm',
		'value'
	],
	#category : #'VulnerabilityVisualizer-Grype'
}

{ #category : #'instance creation' }
DVVGrypeChecksum class >> algorithm: aString value: aByteArray [

	^ self new
		  setAlgorithm: aString value: aByteArray;
		  yourself
]

{ #category : #'instance creation' }
DVVGrypeChecksum class >> fromString: aString [

	| splitted |
	splitted := $: split: aString.
	^ self
		  algorithm: splitted first
		  value: (ByteArray readHexFrom: splitted second)
]

{ #category : #accessing }
DVVGrypeChecksum class >> neoJsonMapping: mapper [

	mapper for: self customDo: [ :mapping | 
		mapping
			decoder: [ :string | self fromString: string ];
			encoder: [ :checksum | self halt ] ]
]

{ #category : #accessing }
DVVGrypeChecksum >> algorithm [
	^ algorithm
]

{ #category : #printing }
DVVGrypeChecksum >> printOn: aStream [

	aStream
		nextPutAll: algorithm;
		nextPut: $:.
	value printHexOn: aStream
]

{ #category : #initialization }
DVVGrypeChecksum >> setAlgorithm: aString value: aByteArray [

	algorithm := aString.
	value := aByteArray
]

{ #category : #accessing }
DVVGrypeChecksum >> value [

	^ value
]
