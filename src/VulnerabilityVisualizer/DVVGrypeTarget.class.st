Class {
	#name : #DVVGrypeTarget,
	#superclass : #DVVModel,
	#instVars : [
		'repoDigests',
		'layers',
		'manifest',
		'imageSize',
		'manifestDigest',
		'imageID',
		'config',
		'tags',
		'userInput',
		'mediaType'
	],
	#category : #'VulnerabilityVisualizer-Grype'
}

{ #category : #accessing }
DVVGrypeTarget class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars:
			#( repoDigests layers manifest imageSize manifestDigest
			   imageID config tags userInput mediaType ).
		(mapping mapInstVar: #manifestDigest) valueSchema: DVVGrypeChecksum.
		(mapping mapInstVar: #imageID) valueSchema: DVVGrypeChecksum.
		(mapping mapInstVar: #mediaType) valueSchema: ZnMimeType.
		(mapping mapInstVar: #manifest) valueSchema: #Base64EncodedJson.
		(mapping mapInstVar: #repoDigests) valueSchema: #ArrayOfRepoDigest.
		(mapping mapInstVar: #layers) valueSchema: #ArrayOfLayer.
		(mapping mapInstVar: #config) valueSchema: #Base64EncodedJson ].

	mapper
		for: #ArrayOfRepoDigest
		customDo: [ :mapping | 
			mapping listOfElementSchema: DVVGrypeRepoDigest ];
		for: #ArrayOfLayer
		customDo: [ :mapping | mapping listOfElementSchema: DVVGrypeLayer ]
]
