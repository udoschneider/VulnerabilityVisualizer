Class {
	#name : #DVVGrypeModel,
	#superclass : #DVVModel,
	#instVars : [
		'matches',
		'source',
		'distro',
		'descriptor'
	],
	#category : #VulnerabilityVisualizer
}

{ #category : #accessing }
DVVGrypeModel class >> neoJsonMapping: mapper [

	self neoJsonTypeMapping: mapper.
	mapper for: self do: [ :mapping | 
		mapping mapInstVars: #( matches source distro descriptor ).
		(mapping mapInstVar: #source) valueSchema: DVVGrypeSource.
		(mapping mapInstVar: #distro) valueSchema: DVVGrypeDistro.
		(mapping mapInstVar: #descriptor) valueSchema: DVVGrypeDescriptor.
		(mapping mapInstVar: #matches) valueSchema: #ArrayOfMatch ].

	mapper
		for: #ArrayOfMatch
		customDo: [ :mapping | mapping listOfElementSchema: DVVGrypeMatch ]
]

{ #category : #accessing }
DVVGrypeModel >> matches [
	^ matches
]

{ #category : #accessing }
DVVGrypeModel >> source [

	^ source
]
