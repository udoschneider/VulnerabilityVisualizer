Class {
	#name : #GrypeMatchSearchedBy,
	#superclass : #GrypeObject,
	#instVars : [
		'namespace',
		'cpes',
		'distro',
		'language'
	],
	#category : #'Grype-Core'
}

{ #category : #accessing }
GrypeMatchSearchedBy class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars: #( namespace cpes distro  language).

		(mapping mapInstVar: #cpes) valueSchema: #ArrayOfCPE ]
]

{ #category : #accessing }
GrypeMatchSearchedBy >> cpes [

	^ cpes
]

{ #category : #accessing }
GrypeMatchSearchedBy >> cpes: anObject [

	cpes := anObject
]

{ #category : #accessing }
GrypeMatchSearchedBy >> distro [

	^ distro
]

{ #category : #accessing }
GrypeMatchSearchedBy >> distro: anObject [

	distro := anObject
]

{ #category : #accessing }
GrypeMatchSearchedBy >> language [

	^ language
]

{ #category : #accessing }
GrypeMatchSearchedBy >> language: anObject [

	language := anObject
]

{ #category : #accessing }
GrypeMatchSearchedBy >> namespace [

	^ namespace
]

{ #category : #accessing }
GrypeMatchSearchedBy >> namespace: anObject [

	namespace := anObject
]

{ #category : #printing }
GrypeMatchSearchedBy >> printOn: aStream [

	super printOn: aStream.
	aStream
		space;
		nextPut: $(;
		nextPutAll: namespace;
		nextPut: $)
]
