Class {
	#name : #GrypeDescriptorDb,
	#superclass : #GrypeObject,
	#instVars : [
		'error',
		'built',
		'checksum',
		'location',
		'schemaVersion'
	],
	#category : #'Grype-Core'
}

{ #category : #accessing }
GrypeDescriptorDb class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars:
			#( error built checksum location schemaVersion ).
		(mapping mapInstVar: #built) valueSchema: DateAndTime.
		(mapping mapInstVar: #checksum) valueSchema: GrypeChecksum.
		(mapping mapInstVar: #location) valueSchema: FileReference ].


]

{ #category : #accessing }
GrypeDescriptorDb >> built [

	^ built
]

{ #category : #accessing }
GrypeDescriptorDb >> built: anObject [

	built := anObject
]

{ #category : #accessing }
GrypeDescriptorDb >> checksum [

	^ checksum
]

{ #category : #accessing }
GrypeDescriptorDb >> checksum: anObject [

	checksum := anObject
]

{ #category : #accessing }
GrypeDescriptorDb >> error [

	^ error
]

{ #category : #accessing }
GrypeDescriptorDb >> error: anObject [

	error := anObject
]

{ #category : #accessing }
GrypeDescriptorDb >> location [

	^ location
]

{ #category : #accessing }
GrypeDescriptorDb >> location: anObject [

	location := anObject
]

{ #category : #accessing }
GrypeDescriptorDb >> schemaVersion [

	^ schemaVersion
]

{ #category : #accessing }
GrypeDescriptorDb >> schemaVersion: anObject [

	schemaVersion := anObject
]
