Class {
	#name : #GrypeMatchDetails,
	#superclass : #GrypeObject,
	#instVars : [
		'matcher',
		'searchedBy',
		'found'
	],
	#category : #'Grype-Core'
}

{ #category : #accessing }
GrypeMatchDetails class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars: #( matcher searchedBy found ).

		(mapping mapInstVar: #searchedBy) valueSchema:
			GrypeMatchSearchedBy ]
]

{ #category : #accessing }
GrypeMatchDetails >> found [

	^ found
]

{ #category : #accessing }
GrypeMatchDetails >> found: anObject [

	found := anObject
]

{ #category : #accessing }
GrypeMatchDetails >> matcher [

	^ matcher
]

{ #category : #accessing }
GrypeMatchDetails >> matcher: anObject [

	matcher := anObject
]

{ #category : #accessing }
GrypeMatchDetails >> searchedBy [

	^ searchedBy
]

{ #category : #accessing }
GrypeMatchDetails >> searchedBy: anObject [

	searchedBy := anObject
]
