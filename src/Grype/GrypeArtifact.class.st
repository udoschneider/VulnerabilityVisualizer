Class {
	#name : #GrypeArtifact,
	#superclass : #Object,
	#instVars : [
		'metadata',
		'version',
		'licenses',
		'language',
		'cpes',
		'locations',
		'name',
		'type',
		'purl'
	],
	#category : #'Grype-Core'
}

{ #category : #accessing }
GrypeArtifact class >> neoJsonMapping: mapper [

	mapper for: self do: [ :mapping | 
		mapping mapInstVars:
			#( metadata version licenses language cpes locations name type purl ).
		(mapping mapInstVar: #locations) valueSchema: #ArrayOfLocation.
		(mapping mapInstVar: #cpes) valueSchema: #ArrayOfCPE.
		(mapping mapInstVar: #purl) valueSchema: PUrl ].

	mapper
		for: #ArrayOfLocation
		customDo: [ :mapping | 
		mapping listOfElementSchema: GrypeLocation ]
]

{ #category : #printing }
GrypeArtifact >> printOn: aStream [

	super printOn: aStream.
	aStream
		space;
		nextPut: $(;
		print: purl;
		nextPut: $)
]
